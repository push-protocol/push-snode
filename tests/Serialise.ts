import { Block } from '../src/generated/push/v1/block_pb'
import { GetTransactionRequest, GetTransactionsRequest } from '../src/generated/push/v1/snode_pb'
import { BitUtil } from '../src/utilz/bitUtil'

const serailiaseAndDeserialiseGetTransactionsRequest = () => {
  const getTransactionsRequest = new GetTransactionsRequest()
  getTransactionsRequest.setWallet('eip155:97:0xD8634C39BBFd4033c0d3289C4515275102423681')
  getTransactionsRequest.setCategory(0)
  getTransactionsRequest.setTimestamp('1724667419')
  getTransactionsRequest.setOrder(0)
  const bytes = getTransactionsRequest.serializeBinary()
  console.log('Serialized (bytes):', bytes)
  const base16String = BitUtil.bytesToBase16(bytes)
  console.log('Serialized (base16):', base16String)
  const ub = BitUtil.base16ToBytes(base16String)
  console.log(ub)
  const deserialised = GetTransactionsRequest.deserializeBinary(ub)
  const { wallet, category, timestamp, order } = deserialised.toObject()
  console.log(wallet)
  console.log(category)
  console.log(timestamp)
  console.log(order)
}

const serialiseAndDeserialiseGetTransactionRequest = () => {
  const getTransactionRequest = new GetTransactionRequest()
  getTransactionRequest.setKey('session1234')
  getTransactionRequest.setWallet('eip155:1:0x69e666767Ba3a661369e1e2F572EdE7ADC926029')
  getTransactionRequest.setCategory(0)
  const bytes = getTransactionRequest.serializeBinary()
  console.log('Serialized (bytes):', bytes)
  const base16String = BitUtil.bytesToBase16(bytes)
  console.log('Serialized (base16):', base16String)
  const ub = BitUtil.base16ToBytes(base16String)
  console.log(ub)
  const deserialised = GetTransactionRequest.deserializeBinary(ub)
  const { key, wallet, category } = deserialised.toObject()
  console.log(key, wallet, category)
}

const srialiseAndDesrialiseBlock = () => {
  const block = new Block()

  const blockObject =
    '08f5f1c6d29e32229c0f65794a756232526c6379493657337369626d396b5a556c6b496a6f694d48686d524546465957593359575a44526d4a694e4755305a44453252454d324e6d4a454d6a417a4f575a6b4e6a41774e454e47593255344969776964484e4e6157787361584d694f6a45334d6a59794d544d774f4441774e7a5173496e4a68626d52766255686c65434936496a59304d57457a4e4749304d325935597a4d354e5452684d47597a4e6a6b775a5467305a4463354e474e6c593259305a57566b595459694c434a776157356e556d567a645778306379493657337369626d396b5a556c6b496a6f694d4867345a5445795a4555784d6b4d7a4e575642516d597a4e5749314e6d49774e4555314d304d30525451324f4755304e6a63794e3055344969776964484e4e6157787361584d694f6a45334d6a59794d544d774e5459304f544173496e4e3059585231637949364d58307365794a756232526c535751694f69497765446b34526a6c454f5445775157566d4f55497a516a6c424e4455784d7a64685a6a4644515463324e7a566c52446b775954557a4e5455694c434a306330317062477870637949364d5463794e6a49784d7a41314e6a51344f437769633352686448567a496a6f7866563073496e4e705a323568644856795a534936496a42345a6d49345a5441335a546b304f5745784e47566959574d314e544d314d5441324e5441794d6d566d4f5746684d5467314f44686a595751794d6d55784f446b324d3255344f5463314e54566a5a6a4e6a4d6d497a5a444e6d4d4749304f5749794f574d77596d51794f47566d4e6d4e6a5a5449314e4752684f546b345a5745345a6a4a684d545977597a63314f47566d4d5449344d5751304d7a466c4e7a41314f446c6d4e6a466b4e6d597859694a394c487369626d396b5a556c6b496a6f694d4867354f45593552446b784d45466c5a6a6c434d304935515451314d544d3359575978513045334e6a63315a5551354d4745314d7a55314969776964484e4e6157787361584d694f6a45334d6a59794d544d774f4441774f444973496e4a68626d52766255686c65434936496d59314d5467784e6d5932593255784f574d7a4e6a4e6c4e474e694f474d784e6a55774e6a67784e6a4a6d5a474e6a4e6d4d324d5467694c434a776157356e556d567a645778306379493657337369626d396b5a556c6b496a6f694d4867345a5445795a4555784d6b4d7a4e575642516d597a4e5749314e6d49774e4555314d304d30525451324f4755304e6a63794e3055344969776964484e4e6157787361584d694f6a45334d6a59794d544d774e5459314e544173496e4e3059585231637949364d58307365794a756232526c535751694f69497765475a45515556685a6a64685a6b4e47596d49305a54526b4d545a45517a5932596b51794d444d355a6d51324d44413051305a6a5a5467694c434a306330317062477870637949364d5463794e6a49784d7a41314e6a51354e437769633352686448567a496a6f7866563073496e4e705a323568644856795a534936496a42345a6d4a6c4d47526c4d5759344f4755794e44426b4f444d324d6d566d5a474a69596a42685a6a45335a5745314e5751354f446b335a545a695a445a6a59574a6c4d54466d5a6a67324d7a4e6a4d544a685a445a694d7a526c4f546b774e325a6d4d474a6d4f44646c597a4e684f5751354d3251794d57526b4d444d33595463785a6a686c4e6d553359544a6b5a5745344d4459774e6a59344e6a6b795a5452694e57566c4d6a67784e44497859794a394c487369626d396b5a556c6b496a6f694d4867345a5445795a4555784d6b4d7a4e575642516d597a4e5749314e6d49774e4555314d304d30525451324f4755304e6a63794e3055344969776964484e4e6157787361584d694f6a45334d6a59794d544d774f4441774f545973496e4a68626d52766255686c65434936496d4d794d3246694d4455794d474d794d44566d4e7a59775954413159325a6a4e6a49324d5463335a446c694d7a4d354e474e6d4f4449694c434a776157356e556d567a645778306379493657337369626d396b5a556c6b496a6f694d48686d524546465957593359575a44526d4a694e4755305a44453252454d324e6d4a454d6a417a4f575a6b4e6a41774e454e47593255344969776964484e4e6157787361584d694f6a45334d6a59794d544d774e5459314e446b73496e4e3059585231637949364d58307365794a756232526c535751694f69497765446b34526a6c454f5445775157566d4f55497a516a6c424e4455784d7a64685a6a4644515463324e7a566c52446b775954557a4e5455694c434a306330317062477870637949364d5463794e6a49784d7a41314e6a55314d537769633352686448567a496a6f7866563073496e4e705a323568644856795a534936496a4234595455354e5746695a5445304f446c6b4e7a6b304d7a45774e5745774e3245304e32526959324d314d44646d5a6a63784e54557a595745795a6a466a4e544e6c5a47526b4e6d5a6d597a67354d54677a596a6b354e6a4d345a4759314e544d35596d49785a5441784e6a49325a444e694d6d59314e6a5a684e7a45794d446b334e6a45354d574d354d574e6b4e3255314d5463324f4759334d6a51774f574d784e54426b593259344e54497859694a395858303d12b90c0aaa0c1208494e49545f4449441a0d6569703135353a313a30784141220d6569703135353a313a30784242220d6569703135353a313a307843432a220a04307841411204307842421801220430784343320c0a043078414112043078424232102efe2783fee44a4d811100b08d0b55483ab40b7b226e6f646573223a5b7b226e6f64654964223a22307838653132644531324333356541426633356235366230344535334334453436386534363732374538222c2274734d696c6c6973223a313732343637333234303033302c2272616e646f6d486578223a2266376266376266303366656130613732353135363965303564653635363832646235353935353765222c2270696e67526573756c7473223a5b7b226e6f64654964223a22307866444145616637616643466262346534643136444336366244323033396664363030344346636538222c2274734d696c6c6973223a313732343637333234303032302c22737461747573223a317d2c7b226e6f64654964223a22307839384639443931304165663942334239413435313337616631434137363735654439306135333535222c2274734d696c6c6973223a313732343637333234303031392c22737461747573223a317d5d2c227369676e6174757265223a22307862333333636331623731633434633430386439366237626662363338353439336366313637636232626432353532376437383664333866376239383065616433303132663736636137386533616231613337653661316363666432306236393364656664303039633837313163666338396630353262333933363866316365383162227d2c7b226e6f64654964223a22307866444145616637616643466262346534643136444336366244323033396664363030344346636538222c2274734d696c6c6973223a313732343637333234303032352c2272616e646f6d486578223a2239323136383734646630653134383539376639643434643064666661656465393538343464643137222c2270696e67526573756c7473223a5b7b226e6f64654964223a22307838653132644531324333356541426633356235366230344535334334453436386534363732374538222c2274734d696c6c6973223a313732343637333232343635302c22737461747573223a317d2c7b226e6f64654964223a22307839384639443931304165663942334239413435313337616631434137363735654439306135333535222c2274734d696c6c6973223a313732343637333232343635352c22737461747573223a317d5d2c227369676e6174757265223a22307837626663343432343464633431376132383463313038353064613335313663353035613036326662323262623538353438383661613239393739653032663139376565633263393664356439343864306131643635306563323334646130356330663933626535653230393136316563326363626331653963396537343238623162227d2c7b226e6f64654964223a22307839384639443931304165663942334239413435313337616631434137363735654439306135333535222c2274734d696c6c6973223a313732343637333234303032342c2272616e646f6d486578223a2230643961313661383939636164306566633838336633343564306638306237666131356136353666222c2270696e67526573756c7473223a5b7b226e6f64654964223a22307838653132644531324333356541426633356235366230344535334334453436386534363732374538222c2274734d696c6c6973223a313732343637333232363934332c22737461747573223a317d2c7b226e6f64654964223a22307866444145616637616643466262346534643136444336366244323033396664363030344346636538222c2274734d696c6c6973223a313732343637333232363934372c22737461747573223a317d5d2c227369676e6174757265223a22307862613632393639366565653830343864313639303730336166656361663866626333663834333139643439316164623363663364663333313131396530303239303531373732303237393137313335333332653430666233323639333963626137663634373636663262363933343065366534663066623336333639386663393162227d5d7d4a01314201ee120208011a0208011a0208011a050a03000d751a030a01db1a00'
  const res = BitUtil.base16ToBytes(blockObject)
  const res2 = Block.deserializeBinary(res)
  console.log(res2.toObject())
  console.log(res)
}

// srialiseAndDesrialiseBlock()

serailiaseAndDeserialiseGetTransactionsRequest()
// serialiseAndDeserialiseGetTransactionRequest()
// serailiaseAndDeserialiseBlock()
